#!/usr/bin/env php
<?php
declare(strict_types=1);

function getNewVersionArgument(): float
{
    global $argv;

    if (count($argv) < 2) {
        throw new RuntimeException('First argument "version" is missing');
    }

    return (float) $argv[1];
}

function changeVersionInMainPluginFile(float $newVersion): void
{
    $file = __DIR__ . '/../wp-pager.php';

    $content = file_get_contents($file);

    $content = preg_replace('/Version: [0-9\.]+/', 'Version: ' . $newVersion, $content);

    file_put_contents($file, $content);
}

function getOldVersionFromMainPluginFile(): float
{
    $file = __DIR__ . '/../wp-pager.php';

    $content = file_get_contents($file);

    preg_match('/Version: ([0-9\.]+)/', $content, $matches);

    return (float) $matches[1];
}

function changeVersionInReadmeFile(float $newVersion): void
{
    $file = __DIR__ . '/../readme.txt';

    $content = file_get_contents($file);

    $content = preg_replace('/Stable tag: [0-9\.]+/', 'Stable tag: ' . $newVersion, $content);

    file_put_contents($file, $content);
}

function promtUserForConfirmation(float $oldVersion, float $newVersion): void
{
    if ($newVersion <= $oldVersion) {
        throw new RuntimeException('New version must be greater than old version');
    }

    echo "Are you sure you want to change version from {$oldVersion} to {$newVersion}? [yes/no]\n";

    $handle = fopen ("php://stdin","r");
    $line = fgets($handle);

    if (trim($line) != 'yes'){
        echo "ABORTING!\n";
        exit;
    }
}

$newVersion = getNewVersionArgument();
$oldVersion = getOldVersionFromMainPluginFile();

promtUserForConfirmation($oldVersion, $newVersion);

changeVersionInMainPluginFile($newVersion);
changeVersionInReadmeFile($newVersion);

echo "Version changed from {$oldVersion} to {$newVersion}\n";